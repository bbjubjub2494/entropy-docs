"use strict";(self.webpackChunkentropy_core=self.webpackChunkentropy_core||[]).push([[866],{5150:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var t=n(4848),o=n(8453);const s={},i="Upload Program",a={id:"UploadPrograms",title:"Upload Program",description:"Programs are written and compiled to WASM using this repository",source:"@site/docs/07-UploadPrograms.md",sourceDirName:".",slug:"/UploadPrograms",permalink:"/entropy-docs/UploadPrograms",draft:!1,unlisted:!1,editUrl:"https://github.com/entropyxyz/entropy-docs/tree/master/docs/07-UploadPrograms.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"DocsSidebar",previous:{title:"Overview of Programs",permalink:"/entropy-docs/ProgramFeatures"},next:{title:"Signing",permalink:"/entropy-docs/Sign"}},c={},d=[];function l(e){const r={a:"a",code:"code",h1:"h1",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"upload-program",children:"Upload Program"}),"\n",(0,t.jsxs)(r.p,{children:["Programs are written and compiled to WASM using this ",(0,t.jsx)(r.a,{href:"https://github.com/entropyxyz/programs",children:"repository"})]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["A program owner calls ",(0,t.jsx)(r.code,{children:"set_program"})," in the program pallet with"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"the program bytecode"}),"\n",(0,t.jsx)(r.li,{children:"the configuration interface which is a seralized json object that allows a user to know the configuration of the program then set their own indiviudualized configuration in programsData"}),"\n",(0,t.jsx)(r.li,{children:"The signing key signs the tx and becomes the deployer key"}),"\n",(0,t.jsx)(r.li,{children:"A ref counter gets set to 0 when uploading and is used to track how many users are using a program"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["A program then gets stored in the Programs storage slot with the key being ",(0,t.jsx)(r.code,{children:"H(bytecode + configuration_interface)"}),". The hash is used by a user to point to the programs they want applied to their key, everytime a program is referenced the ref counter increments"]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Since the key is a hash there is no editing programs (since that would change the hash)"}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Programs can be removed if the ref count is zero by the deploy key"}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var t=n(6540);const o={},s=t.createContext(o);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);